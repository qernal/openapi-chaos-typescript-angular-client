/**
 * Chaos
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs';
import { AuthToken } from '../model/models';
import { AuthTokenBody } from '../model/models';
import { AuthTokenMeta } from '../model/models';
import { AuthTokenPatch } from '../model/models';
import { DeletedResponse } from '../model/models';
import { ListAuthTokens } from '../model/models';
import { OrganisationsListPageParameter } from '../model/models';
import { Configuration } from '../configuration';
export interface TokensServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    /**
     * Create new auth token
     * Create new auth token for use with the CLI and TF Provider  ### Warning The &#x60;token&#x60; field is only shown once and can\&#39;t be retrieved again without generating a new token. Securely save this once the response has been received.
     * @param AuthTokenBody
     */
    authTokensCreate(AuthTokenBody: AuthTokenBody, extraHttpRequestParams?: any): Observable<AuthToken>;
    /**
     * Delete token
     *
     * @param token_id Token ID reference
     */
    authTokensDelete(token_id: string, extraHttpRequestParams?: any): Observable<DeletedResponse>;
    /**
     * Get token information
     *
     * @param token_id Token ID reference
     */
    authTokensGet(token_id: string, extraHttpRequestParams?: any): Observable<AuthTokenMeta>;
    /**
     * List all user auth tokens
     *
     * @param page Query parameters for pagination
     */
    authTokensList(page?: OrganisationsListPageParameter, extraHttpRequestParams?: any): Observable<ListAuthTokens>;
    /**
     * Update token
     *
     * @param token_id Token ID reference
     * @param AuthTokenPatch
     */
    authTokensUpdate(token_id: string, AuthTokenPatch: AuthTokenPatch, extraHttpRequestParams?: any): Observable<AuthToken>;
}
